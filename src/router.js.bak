import Vue from 'vue'
import Router from 'vue-router'
import { store } from '../../../cbadmin-vue-argon/vue-argon/src/_store'
import DashboardLayout from '@/layout/DashboardLayout'
import AuthLayout from '@/layout/AuthLayout'
Vue.use(Router)

var applicationRoutes = [];
// Routes are loaded dynamically and stored in the store.
if (!store.state.routes.length) {
  fetch('/cbadmin/auth/getroutes')
    .then(response => {
      response.text().then(text => {
        const data = text && JSON.parse(text);
        if (!response.ok) {
          const error = (data && data.message) || response.statusText;
          if (response.status === 403) {
            store.dispatch('authentication/logout');
            router.go('login');
          }
        }
        store.dispatch('setRoutes', data.data);
        setRoutes(applicationRoutes, data.data);
      });
    });
} else {
  setRoutes(applicationRoutes, store.state.routes);
}

function setRoutes(applicationRoutes, routes)
{
  routes.forEach(function(el, index, array) {
    var childrenRoutes = [];
    /*
    if (el.children) {
      el.children.forEach(function(child, index, array) {
        childrenRoutes.push({
          path: child.path,
          name: child.name,
          component: () => import(child.component)
        });
      });
    }*/
    if (el.redirect == 'search') {
      var child = el.children[0];
      childrenRoutes.push({
        path: '/search',
        name: 'search',
        //component: () => import(child.component)
        component: () => import('./views/Search.vue')
      });
    } else {
      childrenRoutes.push({
        path: '/login',
        name: 'login',
        component: () => import('./views/Login.vue')
      });
    }
    var route = {
      path: el.path,
      redirect: el.redirect,
      component: (el.component == 'DashboardLayout') ? DashboardLayout : AuthLayout,
      children: childrenRoutes
    };
    applicationRoutes.push(route);
  });
}

var applicationRoutes2 = [
  {
    path: '/',
    redirect: 'search',
    component: DashboardLayout,
    children: [
      {
        path: '/search',
        name: 'search',
        component: () => import('./views/Search.vue')
      },
    ]
  },
  {
    path: '/',
    redirect: 'login',
    component: AuthLayout,
    children: [
      {
        path: '/login',
        name: 'login',
        component: () => import(/* webpackChunkName: "demo" */ './views/Login.vue')
      }
    ]
  },
];

export const router = new Router({
  mode: 'history',
  linkExactActiveClass: 'active',
  routes: applicationRoutes
})

router.beforeEach((to, from, next) => {
  // redirect to login page if not logged in and trying to access a restricted page
  const publicPages = ['/search', '/login', '/register','/reset'];
  const authRequired = !publicPages.includes(to.path);
  const loggedUser = store.state.user.userId;

  if (authRequired && (!loggedUser)) {
    return next('/login');
  }

  next();
})

var backupRoutes = [
  {
    path: '/',
    redirect: 'search',
    component: DashboardLayout,
    children: [
      {
        path: '/search',
        name: 'search',
        component: () => import(/* webpackChunkName: "demo" */ './views/Search.vue')
      },
      {
        path: '/upload',
        name: 'upload',
        component: () => import('./views/Upload.vue')
      },
      {
        path: '/treeview',
        name: 'treeview',
        component: () => import('./views/Treeview.vue')
      },
      {
        path: '/edit-image/:imageid',
        name: 'editimage',
        component: () => import('./views/EditImage.vue')
      },
      {
        path: '/profile',
        name: 'profile',
        component: () => import('./views/Profile.vue')
      },
    ]
  },
  {
    path: '/',
    redirect: 'login',
    component: AuthLayout,
    children: [
      {
        path: '/login',
        name: 'login',
        component: () => import(/* webpackChunkName: "demo" */ './views/Login.vue')
      },
      {
        path: '/reset',
        name: 'reset',
        component: () => import(/* webpackChunkName: "demo" */ './views/Reset.vue')
      },
      {
        path: '/register',
        name: 'register',
        component: () => import(/* webpackChunkName: "demo" */ './views/Register.vue')
      }
    ]
  },
  // otherwise redirect to home
  { path: '*', redirect: '/' }
];